{
  "index.html": {
    "href": "index.html",
    "title": "TODO: 全体タイトル | TODO: 全体タイトル",
    "keywords": "TODO: 全体タイトル TODO: トップ"
  },
  "manual/citygml.html": {
    "href": "manual/citygml.html",
    "title": "空間IDを付与した3D都市モデル生成ツール | TODO: 全体タイトル",
    "keywords": "空間IDを付与した3D都市モデル生成ツール CityGML から 地物ID（gml_id）と空間IDのペアリストを生成 コマンドプロンプト（Windows）またはターミナル（macOS / Linux）を起動し、ツールのディレクトリに移動します。 Windows の場合 > cd command macOS / Linux の場合 $ cd command Python 仮想環境を有効化します。 Windows の場合 > .venv\\Scripts\\Activate macOS / Linux の場合 $ source .venv/bin/activate CityGML から 地物ID（gml_id）と空間IDのペアリストを生成し CSV 出力します。 Windows の場合 > python citygml2id.py [コマンド引数] macOS / Linux の場合 $ python citygml2id.py [コマンド引数] コマンド引数は以下の通りです。 引数 説明 値 デフォルト値 input_file_or_dir CityGMLのファイルのパス（*.gml）または上位ディレクトリのパス output_file_or_dir 地物IDと空間IDのペアリストのファイルのパス（*.csv）または上位ディレクトリのパス --lod 処理するジオメトリの最大LOD 1, 2, 3 3 --grid-type グリッドタイプ zfxy zfxy --grid-level グリッドのズームレベル 20 --grid-size グリッドのサイズ。x y z の順に指定。x のみ指定した場合は y z にも同じ値を適用。将来拡張用。 --grid-crs グリッドの座標参照系のEPSG番号。将来拡張用。 --id IDフィルタ。処理するデータを絞り込む際に gml:id の値を複数指定可能。 --extract 空間IDが付与された CityGML から、空間IDを抽出し、CSVへ出力する場合に指定。 --extrude ２次元データに付与する高さの最小値と最大値（単位：m）。--extract オプション指定時のみ有効。 --interpolate 立体（Solid）内側の空洞をボクセルで埋める場合に指定。Solid形状を持つ「Building（建築物）」「CityFurniture（都市設備）」「Vegetation（植生）」を空間IDに変換する際に使用するオプション。 --merge 上位の空間IDに統合（最適化）する場合に指定。 --debug デバッグログ出力および一時ファイル保持を有効にする場合に指定。 -h 使い方を表示。 使用例 TODO: CityGML および 地物ID（gml_id）と空間IDのペアリストから空間IDが付与されたCityGMLを生成 コマンドプロンプト（Windows）またはターミナル（macOS / Linux）を起動し、ツールのディレクトリに移動します。 Windows の場合 > cd command macOS / Linux の場合 $ cd command Python 仮想環境を有効化します。 Windows の場合 > .venv\\Scripts\\Activate macOS / Linux の場合 $ source .venv/bin/activate CityGML から 地物ID（gml_id）と空間IDのペアリストを生成し CSV 出力します。 Windows の場合 > python id2citygml.py [コマンド引数] macOS / Linux の場合 $ python id2citygml.py [コマンド引数] コマンド引数は以下の通りです。 引数 説明 値 デフォルト値 citygml_file_or_dir CityGMLのファイルのパス(*.gml)または上位ディレクトリのパス id_file_or_dir 地物ID-空間IDペアリストのファイルのパス(*.csv)または上位ディレクトリのパス output_file_or_dir 空間IDを付与した CityGML のファイルのパス(*.gml)または上位ディレクトリのパス --spatialid 空間IDの付与方法 embedding: CityGMLファイルに空間IDを直接付与 reference: 地物ID-空間IDペアリスト（CSVファイル）への相対パスを記録⇒CityGMLファイルへの空間IDの直接付与は行わず、外部ファイル参照のみで空間IDと紐付けする場合に使用 both: CityGMLファイルへの空間ID直接付与とCSVファイルへの相対パス記録の両者を実行 both -h 使い方を表示 使用例 TODO:"
  },
  "manual/index.html": {
    "href": "manual/index.html",
    "title": "| TODO: 全体タイトル",
    "keywords": ""
  },
  "manual/setup.html": {
    "href": "manual/setup.html",
    "title": "セットアップ | TODO: 全体タイトル",
    "keywords": "セットアップ 動作要件 本ツールの動作要件は以下の通りです。 OS Windows macOS Linux ソフトウェア Python 3.9 Google Chrome / Microsoft Edge (ビューア部のみ) 環境構築 空間IDを付与した3D都市モデル生成ツール コマンドプロンプト（Windows）またはターミナル（macOS / Linux）を起動し、ツールのディレクトリに移動します。 Windows の場合 > cd command macOS / Linux の場合 $ cd command Python 仮想環境を作成し有効化します。 Windows の場合 > python -m venv .venv > .venv\\Scripts\\Activate macOS / Linux の場合 $ python3 -m venv .venv $ source .venv/bin/activate ※ コマンド内の.venv は任意の名前に変更可能です。 Python 仮想環境に依存ライブラリをインストールします。 Windows の場合 > pip install -r requirements.txt macOS / Linux の場合 $ pip install -r requirements.txt 空間IDのメタデータ生成ツール コマンド部 空間IDを付与した3D都市モデル生成ツールと同様です。 ビューア部 コマンドプロンプト（Windows）またはターミナル（macOS / Linux）を起動し、ツールのディレクトリに移動します。 Windows の場合 > cd web macOS / Linux の場合 $ cd web Python 仮想環境を作成し有効化します。 Windows の場合 > python -m venv .venv > .venv\\Scripts\\Activate macOS / Linux の場合 $ python3 -m venv .venv $ source .venv/bin/activate ※ コマンド内の.venv は任意の名前に変更可能です。 Python 仮想環境に依存ライブラリをインストールします。 Windows の場合 > pip install -r requirements.txt macOS / Linux の場合 $ pip install -r requirements.txt"
  },
  "manual/spatialid.html": {
    "href": "manual/spatialid.html",
    "title": "空間IDのメタデータ生成ツール | TODO: 全体タイトル",
    "keywords": "空間IDのメタデータ生成ツール コマンド部 コマンドプロンプト（Windows）またはターミナル（macOS / Linux）を起動し、ツールのディレクトリに移動します。 Windows の場合 > cd command macOS / Linux の場合 $ cd command Python 仮想環境を有効化します。 Windows の場合 > .venv\\Scripts\\Activate macOS / Linux の場合 $ source .venv/bin/activate 空間IDが付与された CityGML から 地物ID（gml_id）と空間IDのペアリストを CSV 出力します。 Windows の場合 > python citygml2id.py [コマンド引数] macOS / Linux の場合 $ python citygml2id.py [コマンド引数] コマンド引数は以下の通りです。 引数 説明 値 デフォルト値 input_file_or_dir CityGMLのファイルのパス（*.gml）または上位ディレクトリのパス output_file_or_dir 地物IDと空間IDのペアリストのファイルのパス（*.csv）または上位ディレクトリのパス --lod 処理するジオメトリの最大LOD 1, 2, 3 3 --grid-type グリッドタイプ zfxy zfxy --grid-level グリッドのズームレベル 20 --grid-size グリッドのサイズ。x y z の順に指定。x のみ指定した場合は y z にも同じ値を適用。将来拡張用。 --grid-crs グリッドの座標参照系のEPSG番号。将来拡張用。 --id IDフィルタ。処理するデータを絞り込む際に gml:id の値を複数指定可能。 --extract 空間IDが付与された CityGML から、空間IDを抽出し、CSVへ出力する場合に指定。 --extrude ２次元データに付与する高さの最小値と最大値（単位：m）。--extract オプション指定時のみ有効。 --interpolate 立体（Solid）内側の空洞をボクセルで埋める場合に指定。Solid形状を持つ「Building（建築物）」「CityFurniture（都市設備）」「Vegetation（植生）」を空間IDに変換する際に使用するオプション。 --merge 上位の空間IDに統合（最適化）する場合に指定。 --debug デバッグログ出力および一時ファイル保持を有効にする場合に指定。 -h 使い方を表示。 使用例 2次元の空間ID（地理院タイル(XYZタイル)）が付与されたCityGMLファイルから空間IDを抽出し、以下の条件で3次元の空間ID（ZFXYタイル）を生成する例です。 入力：523723_luse_6668.gml 出力：523723_luse_6668_zl20.csv 空間IDを生成する標高値の範囲：-10mから100m $ python citygml2id.py udx/luse/523723_luse_6668.gml udx/luse/523723_luse_6668_zl20.csv --grid-type zfxy --extract --extrude -10.0 100.0 ビューア部 ※ 本ドキュメントでは開発サーバを用いた手順に限定します。運用環境では Apache や Nginx 等の Web サーバと mod_wsgi や uwsgi 等の WSGI 準拠ミドルウェアを組み合わせてデプロイすることを推奨いたします。 コマンドプロンプト（Windows）またはターミナル（macOS / Linux）を起動し、ツールのディレクトリに移動します。 Windows の場合 > cd web macOS / Linux の場合 $ cd web Python 仮想環境を有効化します。 Windows の場合 > .venv\\Scripts\\Activate macOS / Linux の場合 $ source .venv/bin/activate 開発サーバを起動します Windows の場合 > flask --app server run macOS / Linux の場合 $ flask --app server run Webブラウザでビューアのトップページを開きます。URLは以下の通りです。 http://127.0.0.1:5000 TODO: スクリーンショット TODO: データアップロード"
  }
}